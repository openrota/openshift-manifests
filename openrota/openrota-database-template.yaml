apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: openrota
  paas.redhat.com/appcode: ${APP_CODE}
message: |-
  The following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.
         Username: ${POSTGRESQL_USER}
         Password: ${POSTGRESQL_PASSWORD}
    Database Name: ${POSTGRESQL_DATABASE}
   Connection URL: postgresql://${DATABASE_SERVICE_NAME}:5432/
  For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/postgresql-container/.
metadata:
  name: openrota-database-template
  namespace: openrota--runtime-int
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    labels:
      tier: database
    name: ${DATABASE_SERVICE_NAME}
  stringData:
    database-name: ${POSTGRESQL_DATABASE}
    database-password: ${POSTGRESQL_PASSWORD}
    database-user: ${POSTGRESQL_USERNAME}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      paas.redhat.com/appcode: ${APP_CODE}
      tier: database
    name: ${DATABASE_SERVICE_NAME}
  spec:
    ports:
    - name: postgresql
      nodePort: 0
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: ${DATABASE_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    labels:
      paas.redhat.com/appcode: ${APP_CODE}
      tier: database
    name: ${DATABASE_SERVICE_NAME}
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: ${DATABASE_SERVICE_NAME}
    serviceName: ${DATABASE_SERVICE_NAME}
    template:
      metadata:
        labels:
          app: ${DATABASE_SERVICE_NAME}
      spec:
        containers:
        - capabilities: {}
          env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ${DATABASE_SERVICE_NAME}
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ${DATABASE_SERVICE_NAME}
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: ${DATABASE_SERVICE_NAME}
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          image: registry.redhat.io/rhel8/postgresql-10
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - exec pg_isready --host $POD_IP
            failureThreshold: 6
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - exec pg_isready --host $POD_IP
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: ${DATABASE_SERVICE_NAME}-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
    volumeClaimTemplates:
    - metadata:
        annotations:
          kubernetes.io/reclaimPolicy: Delete
        labels:
          paas.redhat.com/appcode: ${APP_CODE}
          tier: database
        name: ${DATABASE_SERVICE_NAME}-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: ${VOLUME_CAPACITY}
        storageClassName: aws-ebs
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:${POSTGRESQL_VERSION}
          namespace: ${IMAGE_STREAM_NAMESPACE}
        lastTriggeredImage: ""
      type: ImageChange
    - type: ConfigChange
    updateStrategy:
      type: RollingUpdate
parameters:
- description: CMDB ID of the application.
  displayName: App Code
  name: APP_CODE
  required: true
  value: OPRO-001
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 512Mi
- description: The OpenShift Namespace where the ImageStream resides.
  displayName: ImageStream Namespace
  name: IMAGE_STREAM_NAMESPACE
  value: openshift
- description: The name of the OpenShift Service exposed for the database.
  displayName: Database Service Name
  name: DATABASE_SERVICE_NAME
  required: true
  value: postgresql
- description: Username for PostgreSQL user that will be used for accessing the database.
  displayName: PostgreSQL Connection Username
  name: POSTGRESQL_USER
  required: true
  value: postgresql
- description: Password for the PostgreSQL connection user.
  displayName: PostgreSQL Connection Password
  name: POSTGRESQL_PASSWORD
  required: true
  value: postgresql
- description: Name of the PostgreSQL database accessed.
  displayName: PostgreSQL Database Name
  name: POSTGRESQL_DATABASE
  required: true
  value: openrota
- description: Volume space available for data, e.g. 512Mi, 2Gi.
  displayName: Volume Capacity
  name: VOLUME_CAPACITY
  required: true
  value: 10Gi
- description: Version of PostgreSQL image to be used (10-el7, 10-el8, or latest).
  displayName: Version of PostgreSQL Image
  name: POSTGRESQL_VERSION
  required: true
  value: 10-el8
